# The name of the workflow.
name: Sign Artifact

# Trigger this workflow on a push
on: push

# Create an environment variable
env:
  MASTER_KEY: master.key
  SIGNABLE_FILE_PATH: HelloWorld.dll
  INSTALL_DIR: C:\Users\runneradmin\eSignerCKA
  MASTER_KEY_FILE: C:\Users\runneradmin\eSignerCKA\master.key

jobs:
  # Defines job named "sign-file"
  sign-file:
    # Run job on Windows Runner
    runs-on: windows-2019
    # When the workflow runs, this is the name that is logged
    name: Sign DLL File with eSignerCKA
    steps:
      # 1) Check out the source code so that the workflow can access it.
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2) Download and Unzip eSignerCKA Setup
      - name: Download and Unzip eSignerCKA Setup
        run: | 
          Invoke-WebRequest -OutFile eSigner_CKA_Setup.zip "https://github.com/SSLcom/eSignerCKA/releases/download/v1.0.4/SSL.COM-eSigner-CKA_1.0.4.zip"
          Expand-Archive -Force eSigner_CKA_Setup.zip
          Remove-Item eSigner_CKA_Setup.zip
          Move-Item -Destination "eSigner_CKA_Installer.exe" -Path "eSigner_CKA_*\*.exe"
      
      # 3) Install eSignerCKA
      - name: Setup eSignerCKA in Silent Mode
        run: |
          New-Item -ItemType Directory -Force -Path ${{ env.INSTALL_DIR }}
          ./eSigner_CKA_Installer.exe /CURRENTUSER /VERYSILENT /SUPPRESSMSGBOXES /DIR="${{ env.INSTALL_DIR }}" | Out-Null

      # 4) Set SSLcom account information
      - name: Config Account Information on eSignerCKA
        run: |
          ${{ env.INSTALL_DIR }}/eSignerCKATool.exe config -mode "${{ secrets.MODE }}" -user "${{ secrets.USERNAME }}" -pass "${{ secrets.PASSWORD }}" -totp "${{ secrets.TOTP_SECRET }}" -key "${{ env.MASTER_KEY_FILE }}" -r

      # 5) Unload and Load certificate to windows certificate store
      - name: Load Certificate into Windows Store
        run: |
          ${{ env.INSTALL_DIR }}/eSignerCKATool.exe unload
          ${{ env.INSTALL_DIR }}/eSignerCKATool.exe load

      # 6) Select code signing certificate and get thumprint for signing
      - name: Select Certificate From Windows Store
        run: |
          $CodeSigningCert = Get-ChildItem Cert:\CurrentUser\My -CodeSigningCert | Select-Object -First 1
          echo "THUMBPRINT=$($CodeSigningCert.Thumbprint)" >> $env:GITHUB_ENV

      # 7) Sign artifact with signtool
      - name: Sign Sample File with SignTool
        run: |
          & 'C:/Program Files (x86)/Windows Kits/10/bin/10.0.22621.0/x64/signtool.exe' sign /debug /fd sha256 /tr http://ts.ssl.com /td sha256 /sha1 ${{ env.THUMBPRINT }} ${{ env.SIGNABLE_FILE_PATH }}

      # 8) Upload eSignerCKA Logs
      - name: Upload eSignerCKA Logs
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: eSignerCKA-Logs
          path: C:\Users\runneradmin\AppData\Roaming\eSignerCKA\KSP
